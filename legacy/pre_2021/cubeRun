#!/bin/bash

usage()
{
cat << EOF
usage: $0 options

OPTIONS:
-r run# (NEEDED!)
-e expname (def: current experiment, example: xppe7815)
-d directory for output files (default: ftc diretory of specified experiment)
-q queue name (default: psanaq if exp specified, psneh(hi)prioq for current exp)
-j #: run on # number of cores
-n number of events (for testing)
-c cube name
-s run locally
EOF
}

export PATH=$PATH:/reg/g/pcds/engineering_tools/xpp/scripts/

RUN=-1
#16 works ok for default smalleData
#also when using MPI, use only one node.....
#for bigger ROI on short run, 32 jobs is better, 64 did not have gain
#NJOBS=16
#NJOBS=36
NJOBS=1 #need to reshape detector part.
#NJOBS=3
#NJOBS=5
#
EXP='xxx'
QUEUE=psanaq
DIRNAME='xxx'
NUMBER_OF_EVENTS=0
SINGLEJOB=0
DAYSHIFT=1
QUEUEREQ='xxx'
ARGSTR=''

while getopts "e:d:r:n:q:j:hs" OPTION
do
    case $OPTION in
	h)
	    usage
	    exit 1
	    ;;
	r) 
	    RUN=$OPTARG
	    ;;
	e)
	    EXP=$OPTARG
	    ;;
	n)
	    ARGSTR=$ARGSTR' --nev '$OPTARG
	    ;;
	c)
	    ARGSTR=$ARGSTR' --cube '$OPTARG
	    ;;
	q)
	    QUEUEREQ=$OPTARG
	    ;;
	d)
	    DIRNAME=$OPTARG
	    ;;
	j)
	    NJOBS=$OPTARG
	    ;;
	s)
	    SINGLEJOB=1
	    ;;
	?)
	    usage
	    exit
	    ;;
	esac
done

#currently ongoing exp
if [ $EXP == 'xxx' ]; then
    QUEUE=psnehprioq
    HOUR=`date +"%H"`
    ISDAY=0
    if [ $HOUR -ge 9 ]; then ISDAY=1; fi
    if [ $HOUR -ge 21 ]; then ISDAY=0; fi
    if [ $DAYSHIFT==1 -a $ISDAY==1 ]; then
	QUEUE=psnehhiprioq
    fi
    if [ $DAYSHIFT==0 -a $ISDAY==0 ]; then
	QUEUE=psnehhiprioq
    fi
fi    

if [ $RUN -le 0 ]; then
    echo 'we need a run as input, use -r option'
    exit
fi

RUN=`echo $RUN |  sed 's/^0*//'`
RUN=`printf "%0*d\n" 4 $RUN`

RUNJOBS=`bjobs -u all -q $QUEUE | grep $QUEUE | grep run | grep $RUN | wc | awk '{print $1}'`
#IMPLEMENT ME:
#add option to not check as for smallDataRun,
#if [ $RUNJOBS -ne 0 ]; then
#    echo 'job for run ' $RUN ' is already submitted: ' $RUNJOBS
#    bjobs -l $RUNJOBS
#    echo ' still submit? [y/n]'
#    read answer
#    if [ $answer != 'y' ]; then
#	exit
#    fi
#fi

if [ $EXP != 'xxx' ]; then
    ARGSTR=$ARGSTR' --exp '$EXP
else
    CURREXP=`get_curr_exp`
    EXP=$CURREXP
fi

if [[ $EXP =~ 'xpp' ]]; then
    HUTCH='xpp'
else
    HUTCH='xcs'
    if [ $QUEUE == 'psnehhiprioq' ]; then
	QUEUE='psfehhiprioq';
    fi
    if [ $QUEUE == 'psnehprioq' ]; then
	QUEUE='psfehprioq';
    fi
fi

if [ $QUEUEREQ != 'xxx' ]; then
    QUEUE=$QUEUEREQ
fi

if [ $QUEUE == 'psanaq' ]; then
    if [ $NJOBS -eq 16 ]; then
	NJOBS=12
    fi
fi

BASEDIR=/reg/d/psdm/$HUTCH/$EXP/results
if [ ! -d  $BASEDIR ]; then
    BASEDIR=/reg/d/psdm/$HUTCH/$EXP/res
fi
LOGDIR=$BASEDIR/logs
if [ $DIRNAME != 'xxx' ]; then
    ARGSTR=$ARGSTR' --dir '$DIRNAME
    LOGDIR=$DIRNAME/logs
    if [ ! -d  $DIRNAME ]; then
	echo 'now we will make ' $DIRNAME
	mkdir $DIRNAME
    fi
fi

if [ ! -d  $LOGDIR ]; then
    echo 'now we will make '$LOGDIR
    mkdir $LOGDIR
fi

source /reg/g/pcds/setup/pathmunge.sh
LDAP='./'
pythonpathmunge $LDAP
pythonpathmunge $LDAP'/smalldata_tools'

PYTHON_EXE='./examples/MakeCube.py'
#PYTHON_EXE='./examples/PickedEventsCube.py'

# necessary because xarray check if it can use the set DISPLAY variable and
# that is not possible when in batch mode but it is also absolutely not needed
unset DISPLAY


if [ $SINGLEJOB -eq 1 ]; then
    echo 'so I will run a new job for run ' $RUN
    if [ $NJOBS -le 12 ]; then
	CMD=`echo mpirun -n $NJOBS python $PYTHON_EXE \
	$ARGSTR \
        --run $RUN`
    else
	CMD=`echo python $PYTHON_EXE \
	$ARGSTR \
        --run $RUN`
    fi
else
    echo 'will use queue: ' $QUEUE
    CREATE_TIME=`date '+%m/%d/%Y_%H:%M:%S'`
    echo 'so I will submit a new job for run ' $RUN ' now....' $CREATE_TIME
    CMD=`echo bsub -n $NJOBS -q $QUEUE -o $LOGDIR/makeCube_$EXP\_$RUN\_%J.out \
        mpirun --mca btl ^openib python $PYTHON_EXE \
	$ARGSTR --run $RUN`
#    CMD=`echo bsub -n $NJOBS -q $QUEUE -o $LOGDIR/makeCube_$EXP\_$RUN\_%J.out \
#        mpirun python $PYTHON_EXE \
#	$ARGSTR \
#        --run $RUN`
fi

source /reg/g/psdm/etc/psconda.sh
#conda activate ana-1.3.63 

echo $CMD
$CMD
