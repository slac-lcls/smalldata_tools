#!/bin/bash

usage()
{
cat << EOF
usage: $0 options

OPTIONS:
-r run# (NEEDED!)
-e expname (def: current experiment, example: xppe7815)
-d directory for output files (default: ftc diretory of specified experiment)
-q queue name (default: psanaq if exp specified, psneh(hi)prioq for current exp)
-j #: run on # number of cores
-n number of events (for testing)
-s run locally
-L add data to REDIS (selected variables)
-l add data to REDIS (all)
-f no recorder data (faster data access)
EOF
}

export PATH=$PATH:/reg/g/xpp/scripts:/reg/neh/operator/xppopr/bin

RUN=-1
#16 works ok for default smalleData
#also when using MPI, use only one node.....
#for bigger ROI on short run, 32 jobs is better, 64 did not have gain
GATHER=5
#GATHER=100
#NJOBS=16
NJOBS=80
#
#EXP='xcsx22015'
EXP='xxx'
QUEUE=psanaq
DIRNAME='xxx'
NUMBER_OF_EVENTS=0
SINGLEJOB=0
DAYSHIFT=1
QUEUEREQ='xxx'
XTCAV=0
LIVE=0
LIVEFAST=0
AUTO=0
NORECORDER=0

while getopts "e:d:r:n:q:j:g:hxsflLfa" OPTION
do
    case $OPTION in
	h)
	    usage
	    exit 1
	    ;;
	r) 
	    RUN=$OPTARG
	    ;;
	e)
	    EXP=$OPTARG
	    ;;
	n)
	    NUMBER_OF_EVENTS=$OPTARG
	    ;;
	q)
	    QUEUEREQ=$OPTARG
	    ;;
	d)
	    DIRNAME=$OPTARG
	    ;;
	j)
	    NJOBS=$OPTARG
	    ;;
	s)
	    SINGLEJOB=1
	    ;;
	f)
	    NORECORDER=1
	    ;;
	l)
	    LIVE=1
	    ;;
	L)
	    LIVEFAST=1
	    ;;
	x)
	    XTCAV=1
	    ;;
	g)
	    GATHER=$OPTARG
	    ;;
	a)
	    AUTO=1
	    ;;
	?)
	    usage
	    exit
	    ;;
	esac
done

#currently ongoing exp
if [ $EXP == 'xxx' ]; then
    QUEUE=psnehprioq
    HOUR=`date +"%H"`
    ISDAY=0
    if [ $HOUR -ge 9 ]; then ISDAY=1; fi
    if [ $HOUR -ge 21 ]; then ISDAY=0; fi
    if [ $DAYSHIFT==1 -a $ISDAY==1 ]; then
	QUEUE=psnehhiprioq
    fi
    if [ $DAYSHIFT==0 -a $ISDAY==0 ]; then
	QUEUE=psnehhiprioq
    fi
fi    

if [ $RUN -le 0 ]; then
    echo 'we need a run as input, use -r option'
    exit
fi

RUN=`echo $RUN |  sed 's/^0*//'`
RUN=`printf "%0*d\n" 4 $RUN`

RUNJOBS=`bjobs -u all -q $QUEUE | grep $QUEUE | grep run | grep $RUN | wc | awk '{print $1}'`
if [ $RUNJOBS -ne 0 ]; then
    echo 'job for run ' $RUN ' is already submitted: ' $RUNJOBS
    bjobs -l $RUNJOBS
    if [ $AUTO -eq 0 ]; then 
	echo 'still submit? [y/n]'
	read answer
	if [ $answer != 'y' ]; then
	    exit
	fi
    fi
fi

ARGSTR=''
if [ $XTCAV -gt 0 ]; then
    ARGSTR=$ARGSTR' --xtcav'
fi
if [ $LIVE -gt 0 ]; then
    ARGSTR=$ARGSTR' --live'
fi
if [ $LIVEFAST -gt 0 ]; then
    ARGSTR=$ARGSTR' --liveFast'
fi
if [ $NORECORDER -gt 0 ]; then
    ARGSTR=$ARGSTR' --norecorder'
fi
if [ $NUMBER_OF_EVENTS -ne 0 ]; then
    ARGSTR=$ARGSTR' --nev '$NUMBER_OF_EVENTS
fi
if [ $EXP != 'xxx' ]; then
    ARGSTR=$ARGSTR' --exp '$EXP
else
    CURREXP=`get_curr_exp`
    EXP=$CURREXP
fi
HUTCH=${EXP:0:3}
FEH_HUTCHES="xcs cxi mfx mec"

ARGSTR=$ARGSTR' --gather '$GATHER

for FHUTCH in $FEH_HUTCHES; do
    if [ $HUTCH == $FHUTCH ]; then
	if [ $QUEUE == 'psnehhiprioq' ]; then
	    QUEUE='psfehhiprioq';
	fi
	if [ $QUEUE == 'psnehprioq' ]; then
	    QUEUE='psfehprioq';
	fi
    fi
done

if [ $QUEUEREQ != 'xxx' ]; then
    QUEUE=$QUEUEREQ
fi

if [ $QUEUE == 'psanaq' ]; then
    if [ $NJOBS -eq 16 ]; then
	NJOBS=12
    fi
fi

BASEDIR=/reg/d/psdm/$HUTCH/$EXP/results
if [ ! -d  $BASEDIR ]; then
    BASEDIR=/reg/d/psdm/$HUTCH/$EXP/res
fi
LOGDIR=$BASEDIR/logs
if [ $DIRNAME != 'xxx' ]; then
    ARGSTR=$ARGSTR' --dir '$DIRNAME
    LOGDIR=$DIRNAME/logs
    if [ ! -d  $DIRNAME ]; then
	echo 'now we will make ' $DIRNAME
	mkdir $DIRNAME
    fi
fi

if [ ! -d  $LOGDIR ]; then
    echo 'now we will make '$LOGDIR
    mkdir $LOGDIR
fi

LDAP='./'
source /reg/g/pcds/setup/pathmunge.sh
pythonpathmunge $LDAP

#HAVE_ANA=`echo $PATH | grep  /reg/g/psdm/sw/conda/inst/miniconda2-prod-rhel7/envs/#ana-1 | wc -l`
#if [ $HAVE_ANA -eq 0 ]; then
#    source /reg/g/psdm/etc/psconda.sh
#fi
#above does apparetny not work for everybody
source /reg/g/psdm/etc/psconda.sh
#source /reg/g/psdm/sw/conda1/manange/psconda.sh -py3

#source conda_setup --reldir /reg/neh/home/cpo/ana-1.3.80

if [ $SINGLEJOB -eq 1 ]; then
    echo 'so I will run a new job for run ' $RUN
    if [ $NJOBS -le 8 ]; then
	CMD=`echo mpirun -n $NJOBS python ./examples/SmallDataProducer.py \
	$ARGSTR \
        --run $RUN`
    else
	CMD=`echo python ./examples/SmallDataProducer.py \
	$ARGSTR \
        --run $RUN`
    fi
else
    CREATE_TIME=`date '+%m/%d/%Y_%H:%M:%S'`
    echo 'so I will submit a new job for run ' $RUN ' now....' $CREATE_TIME ' using queue: ' $QUEUE
    CMD=`echo bsub -n $NJOBS -q $QUEUE -o $LOGDIR/smallData_$EXP\_$RUN\_%J.out \
        mpirun --mca btl ^openib python ./examples/SmallDataProducer.py \
	$ARGSTR --run $RUN`
#    CMD=`echo bsub -n $NJOBS -q $QUEUE -o $LOGDIR/smallData_$EXP\_$RUN\_%J.out \
#        mpirun python ./examples/SmallDataProducer.py \
#	$ARGSTR --run $RUN`
fi

echo $CMD
$CMD
